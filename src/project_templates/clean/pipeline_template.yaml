pipelineName: pipeline_housing_prices
description: Pipeline for presentation of famous housing_prices problem

defaultParams:
    storageBucket: housing_prices
    setupCommand: pip install -r requirements.txt
    envVars:
        # KFP CONFIG:
        - KFP_ENDPOINT: kfp_uri
        # - KFP_CLIENT_ID: pegar computer name?
        # CLOUD STORAGE CONFIG:
        - S3_ACCESS_KEY: minio_key
        - S3_SECRET_KEY: $MINIO_SECRET_KEY  # Since this key starts with '$', it will be fetched from 'envFile'
        - S3_ENDPOINT: minio_uri
    dependencies:
        - requirements.txt: local  # default is local ~> means 'setup_kfp' command will upload FROM LOCAL MACHINE
        - test.csv
        - train.csv
        - acquisitor.py
        - data_prep.py
        - train_model.py
        - evaluate.py
    globalFiles:
        - requirements.txt
    envFile:
        .env
    # Run parameters:
    cronExpression: 0-59/2 * * * *  # “At every 2nd minute from 0 through 59.”
    max_concurrency: 2
    no_catchup: true
    # gettings parameters from:
    # https://kubeflow-pipelines.readthedocs.io/en/latest/source/kfp.client.html

pipelineSteps:
    - name: acquisitor
      description: Acquisitor
      entrypoint: python acquisitor.py
      envVars:
        - MY_ENV_VAR: test_specific_env
      fileInputs:
        - test.csv
        - train.csv

    - name: data_prep
      description: Data preparator
      runAfter: acquisitor
      entrypoint: python data_prep.py
      fileInputs:
        - test.csv
        - train.csv
        - data_prep.py
      fileOutputs:
        - X_train.csv
        - y_train.csv
        - X_test.csv
        - y_test.csv
