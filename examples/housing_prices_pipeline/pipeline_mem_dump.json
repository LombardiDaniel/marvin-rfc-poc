{
    "pipelineName": "pipeline_housing_prices",
    "description": "Pipeline for presentation of famous housing_prices problem",
    "defaultParams": {
        "storageBucket": "housing_prices",
        "setupCommand": "pip install -r requirements.txt",
        "envVars": [{
                "key": "S3_ACCESS_KEY",
                "value": "minio_key"
            },
            {
                "key": "S3_SECRET_KEY",
                "value": "minio_secret"
            },
            {
                "key": "S3_ENDPOINT",
                "value": "minio_uri"
            }
        ],
        "dependencies": [{
                "key": "requirements.txt",
                "value": "local"
            },
            {
                "key": "test.csv",
                "value": "local"
            },
            {
                "key": "train.csv",
                "value": "local"
            },
            {
                "key": "acquisitor.py",
                "value": "local"
            },
            {
                "key": "data_prep.py",
                "value": "local"
            },
            {
                "key": "train_model.py",
                "value": "local"
            },
            {
                "key": "evaluate.py",
                "value": "local"
            }
        ],
        "globalFiles": ["requirements.txt"]
    },
    "pipelineSteps": [{
            "name": "acquisitor",
            "description": "Acquisitor",
            "entrypoint": "python acquisitor.py",
            "envVars": [{
                "key": "MY_ENV_VAR",
                "value": "test_specific_env"
            }],
            "fileInputs": [
                "test.csv",
                "train.csv"
            ]
        },
        {
            "name": "data_prep",
            "description": "Data preparator",
            "runAfter": "acquisitor",
            "entrypoint": "python data_prep.py",
            "fileInputs": [
                "test.csv",
                "train.csv"
            ],
            "fileOutputs": [
                "X_train.csv",
                "y_train.csv",
                "X_test.csv",
                "y_test.csv"
            ]
        },
        {
            "name": "train_model",
            "description": "Train the machine learning model",
            "runAfter": "data_prep",
            "entrypoint": "python train_model.py",
            "fileInputs": [
                "X_train.csv",
                "y_train.csv",
                "X_test.csv",
                "y_test.csv"
            ],
            "fileOutputs": [
                "regressionTree",
                "regressionLinear",
                "randomForest"
            ]
        },
        {
            "name": "evaluate",
            "description": "Evaluates the metrics",
            "runAfter": "train_model",
            "entrypoint": "python evaluate.py",
            "fileInputs": [
                "X_train.csv",
                "y_train.csv",
                "X_test.csv",
                "y_test.csv",
                "regressionTree",
                "regressionLinear",
                "randomForest"
            ]
        }
    ]
}